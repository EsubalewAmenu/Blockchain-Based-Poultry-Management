# Generated by Django 5.0.7 on 2024-08-12 08:10

import django.contrib.gis.db.models.fields
import django.db.models.deletion
import imagekit.models.fields
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('breeders', '0001_initial'),
        ('customer', '__first__'),
    ]

    operations = [
        migrations.CreateModel(
            name='Hatchery',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=50, null=True)),
                ('photo', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='hatchery_photos')),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('totalcapacity', models.IntegerField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Hatchery',
                'verbose_name_plural': 'Hatcheries',
                'db_table': 'hatchery',
                'ordering': ['created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Candling',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('candlingcode', models.CharField(blank=True, max_length=50, null=True)),
                ('eggs', models.IntegerField(blank=True, max_length=50, null=True)),
                ('candled', models.BooleanField(blank=True, max_length=50, null=True)),
                ('candled_date', models.DateTimeField(blank=True, null=True)),
                ('spoilt_eggs', models.IntegerField(blank=True, max_length=50, null=True)),
                ('fertile_eggs', models.IntegerField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('breeders', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candling_breeders', to='breeders.breeders')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candling_customer', to='customer.customer')),
            ],
            options={
                'verbose_name': 'Candling',
                'verbose_name_plural': 'Candling',
                'db_table': 'Candling',
                'ordering': ['created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='EggSetting',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('settingcode', models.CharField(blank=True, max_length=50, null=True)),
                ('eggs', models.IntegerField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('breeders', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eggsetting_breeders', to='breeders.breeders')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eggsetting_customer', to='customer.customer')),
            ],
            options={
                'verbose_name': 'EggSetting',
                'verbose_name_plural': 'EggSettings',
                'db_table': 'eggsetting',
                'ordering': ['created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Hatching',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('hatchingcode', models.CharField(blank=True, max_length=50, null=True)),
                ('hatched', models.IntegerField(blank=True, max_length=50, null=True)),
                ('deformed', models.IntegerField(blank=True, max_length=50, null=True)),
                ('spoilt', models.IntegerField(blank=True, max_length=50, null=True)),
                ('chicks_hatched', models.IntegerField(blank=True, max_length=50, null=True)),
                ('notify_customer', models.BooleanField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('breeders', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hatching_breeders', to='breeders.breeders')),
                ('candling', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hatching_candling', to='hatchery.candling')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='hatching_customer', to='customer.customer')),
            ],
            options={
                'verbose_name': 'Hatching',
                'verbose_name_plural': 'Hatching',
                'db_table': 'Hatching',
                'ordering': ['created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Holding',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('holdingcode', models.CharField(blank=True, max_length=50, null=True)),
                ('customer_delivery', models.BooleanField(blank=True, max_length=50, null=True)),
                ('mode_delivery', models.CharField(blank=True, max_length=50, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('distance', models.FloatField(blank=True, max_length=50, null=True)),
                ('cost', models.FloatField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('breeders', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='holding_breeders', to='breeders.breeders')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='holding_customer', to='customer.customer')),
                ('hatching', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='holding_hatching', to='hatchery.hatching')),
            ],
            options={
                'verbose_name': 'Holding',
                'verbose_name_plural': 'Holding',
                'db_table': 'Holding',
                'ordering': ['created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Incubation',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('incubationcode', models.CharField(blank=True, max_length=50, null=True)),
                ('eggs', models.IntegerField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('breeders', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incubation_breeders', to='breeders.breeders')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incubation_customer', to='customer.customer')),
                ('eggsetting', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incubation_eggsetting', to='hatchery.eggsetting')),
            ],
            options={
                'verbose_name': 'Incubation',
                'verbose_name_plural': 'Incubations',
                'db_table': 'incubation',
                'ordering': ['created'],
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='candling',
            name='incubation',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='candling_incubation', to='hatchery.incubation'),
        ),
        migrations.CreateModel(
            name='Incubators',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('incubatortype', models.CharField(blank=True, max_length=50, null=True)),
                ('manufacturer', models.CharField(blank=True, max_length=50, null=True)),
                ('model', models.CharField(blank=True, max_length=15, null=True)),
                ('year', models.CharField(blank=True, max_length=50, null=True)),
                ('code', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('hatchery', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='incubators_hatchery', to='hatchery.hatchery')),
            ],
            options={
                'verbose_name': 'Incubator',
                'verbose_name_plural': 'Incubators',
                'db_table': 'incubators',
                'ordering': ['created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='IncubatorCapacity',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('breed', models.CharField(blank=True, max_length=50, null=True)),
                ('capacity', models.IntegerField(blank=True, max_length=50, null=True)),
                ('occupied', models.IntegerField(blank=True, max_length=15, null=True)),
                ('available', models.IntegerField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('incubator', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='ncubatorcapacity_incubator', to='hatchery.incubators')),
            ],
            options={
                'verbose_name': 'IncubatorCapacity',
                'verbose_name_plural': 'IncubatorCapacity',
                'db_table': 'incubator_capacity',
                'ordering': ['created'],
                'managed': True,
            },
        ),
        migrations.AddField(
            model_name='eggsetting',
            name='incubator',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eggsetting_incubator', to='hatchery.incubators'),
        ),
    ]
