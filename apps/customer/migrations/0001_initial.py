# Generated by Django 3.1.2 on 2020-10-18 08:10

import django.contrib.gis.db.models.fields
from django.db import migrations, models
import django.db.models.deletion
import imagekit.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('breeders', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('first_name', models.CharField(blank=True, max_length=50, null=True)),
                ('last_name', models.CharField(blank=True, max_length=50, null=True)),
                ('full_name', models.CharField(blank=True, max_length=50, null=True)),
                ('photo', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='customer_photos')),
                ('email', models.EmailField(blank=True, max_length=50, null=True)),
                ('phone', models.CharField(blank=True, max_length=15, null=True)),
                ('address', models.CharField(blank=True, max_length=50, null=True)),
                ('location', django.contrib.gis.db.models.fields.PointField(blank=True, geography=True, null=True, srid=4326)),
                ('latitude', models.FloatField(blank=True, null=True)),
                ('longitude', models.FloatField(blank=True, null=True)),
                ('customertype', models.CharField(blank=True, max_length=50, null=True)),
                ('notification_sms', models.BooleanField(blank=True, max_length=50, null=True)),
                ('delivery', models.BooleanField(blank=True, max_length=50, null=True)),
                ('followup', models.BooleanField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'verbose_name': 'Customer',
                'verbose_name_plural': 'Customers',
                'db_table': 'customers',
                'ordering': ['created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Eggs',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('batchnumber', models.CharField(blank=True, max_length=50, null=True)),
                ('customercode', models.CharField(blank=True, max_length=50, null=True)),
                ('photo', imagekit.models.fields.ProcessedImageField(blank=True, null=True, upload_to='eggs_photos')),
                ('brought', models.IntegerField(blank=True, null=True)),
                ('returned', models.IntegerField(blank=True, null=True)),
                ('received', models.IntegerField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('breed', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eggs_breed', to='breeders.breed')),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='eggs_customer', to='customer.customer')),
            ],
            options={
                'verbose_name': 'Egg',
                'verbose_name_plural': 'Eggs',
                'db_table': 'eggs',
                'ordering': ['created'],
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='CustomerRequest',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('requestcode', models.CharField(blank=True, max_length=50, null=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('eggs', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customerrequest_eggs', to='customer.eggs')),
            ],
            options={
                'verbose_name': 'CustomerRequest',
                'verbose_name_plural': 'CustomerRequests',
                'db_table': 'CustomerRequests',
                'ordering': ['created'],
                'managed': True,
            },
        ),
    ]
